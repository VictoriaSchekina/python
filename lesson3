#Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def division():
    try:
        a = int(input('Введите первое число: '))
        b = int(input('Введите второе число: '))
        result = a / b
    except ZeroDivisionError:
        return "На ноль делить нельзя"
    return result
print(division())

#Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
def person(name, surname, year, city, email, phone):
    result = f'{name} {surname}, {year} year of birth, from {city}, {email}, {phone}'
    return result
print(person('Adam', 'Shmidt', '1991', 'Tel-Aviv', 'mail@mail.com', '+49123456'))

#Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

def my_func():
    numbers = []
    for i in range(3):
        i = int(input('Enter a number: '))  #Вводим числа
        numbers.append(i) #Добавляем их в список
    min = min(numbers) #Находим минимальное
    numbers.remove(min) #Убираем его из списка
    print(sum(numbers)) #Выдаем сумму

#не понимаю как сделать так, чтобы программа работала

#Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

while True:
    numbers = input('Введите числа: ')
    numbers_list = numbers.split(' ')
    if numbers == '&':
        break
        print(int_numbers_list)
    else:
        int_numbers_list = map(int, numbers_list)
        print(sum(int_numbers_list))
        continue

#программа выдает сумму и останавливается при написании символа &,
#но я не знаю как сделать так, чтобы она добавляла сумму к существующему результату

#Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

while True:
    numbers = input('Введите числа: ')
    numbers_list = numbers.split(' ')
    if numbers == '&':
        break
        print(int_numbers_list)
    else:
        int_numbers_list = map(int, numbers_list)
        print(sum(int_numbers_list))
        continue

#программа выдает сумму и останавливается при написании символа &,
#но я не знаю как сделать так, чтобы она добавляла сумму к существующему результату

#Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

def capitalize(text):
    return ' '.join(s[:1].upper() + s[1:] for s in text.split(' '))

text = input('Enter a word: ')
print(capitalize(text))
